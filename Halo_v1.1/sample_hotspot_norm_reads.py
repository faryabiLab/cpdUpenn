import sys


def interval_avg(depth_interval, interval_avg, sample_mean):
    with open(depth_interval, 'r') as interval_in:
        with open(interval_avg, 'w+') as interval_out:
            #skip first line in depth file
            interval_in.readline()
            
            for line in interval_in:
                #no need to trip carriage return as only extracting first and third column
                values = line.split('\t')
                
                interval = values[0]
                interval_cvg = values[1]
                normalize_value = float(interval_cvg)/float(sample_mean)
                interval_out.write(interval + '\t' + str(normalize_value) + '\n')
                    
            

# sample_reads
#
# @param1 = *sample_summary generated by Sam Stats
# 
# @return = tuple(sample_name, total_reads)
def sample_reads(final_stat):
    with open (final_stat, 'r') as stat_file:
        stat_values = stat_file.readline()
        values = stat_values.split()
        reads = values[0]
        return reads
        
        
        

def main():
    depth_interval = sys.argv[1]
    final_stat = sys.argv[2]
    normalized_cvg = sys.argv[3]
    
    read_depth = sample_reads(final_stat)
    
    interval_avg(depth_interval, normalized_cvg, read_depth)
main()    
